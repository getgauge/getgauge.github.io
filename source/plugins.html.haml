---
credit: Photo Credit - Alexander Mueller
credit_link: https://www.flickr.com/photos/alexander_mueller_photolover/21659104782
---

- require 'yaml'
- categories = YAML.load_file('data/plugin_data.yaml')
!!!

.inner-banner
  .container
    %h1.caption Gauge Plugins

.plugin-list
  .container
    %p.text-block Gauge was built from the ground up with extensibility via plugins as a guiding principle. The bundled language runners, IDE support, and reports are all plugins. We will keep the Golang core small and simple, while supporting a rich plugin ecosystem.
    %p.text-block
      Below is a list of all currently supported plugins, including some plugins that are currently in development (by external and internal contributors). If there is a plugin that you want but do not see, write your own using the
      %a{:href => "https://github.com/getgauge/gauge/wiki/API", :target => "_blank"} Gauge Plugin API.
      Let us know if you are working on a plugin, and we will list it here.

      .plugins-container
        - categories.each do |category, plugins|
          %h3 #{category}
          %ul.plugins-list
            - plugins.each do |plugin_name, plugin|
              %li
                %h5.name
                  #{plugin_name}
                .details  
                  %p
                    #{plugin['description']}
                    %a{:href => "#{plugin['repo_link']}", :target => "_blank"} Read more...
                  %span 
                    - if plugin['attribution']
                      by
                      %a{:href => "#{plugin['contributor_link']}", :target => "_blank"}   #{plugin['attribution']}
                    - else
                      %strong
                        Unmaintained
                - if plugin['action_link']
                  .action
                    = link_to "#{plugin['action_link']}", class: 'download-icon', target: '_blank' do
                      %span 
                      #{plugin['action']}
                - else
                  .in-progress
                    #{plugin['action']}